# name: Security Scans
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_dispatch:

# permissions:
#   contents: read
#   security-events: write

# jobs:
#   semgrep-scan:
#     name: Semgrep SAST Scan
#     runs-on: self-hosted
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Run Semgrep scan
#         run: |
#           docker run -v $(pwd):/src \
#           -e SEMGREP_APP_TOKEN=${{ secrets.SEMGREP_APP_TOKEN }} \
#           -e SEMGREP_REPO_URL=https://github.com/${{ github.repository }} \
#           -e SEMGREP_REPO_NAME=${{ github.repository }} \
#           -e SEMGREP_BRANCH=${{ github.ref_name }} \
#           -e SEMGREP_JOB_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
#           -e SEMGREP_COMMIT=${{ github.sha }} \
#           -e SEMGREP_PR_ID=${{ github.event.pull_request.number }} \
#           semgrep/semgrep semgrep ci --sarif --output=semgrep.sarif

#       - name: Upload Semgrep SARIF file
#         uses: github/codeql-action/upload-sarif@v3
#         if: always()
#         with:
#           sarif_file: semgrep.sarif
#           wait-for-processing: true

#   gitleaks-scan:
#     name: Gitleaks Secret Scanning
#     runs-on: self-hosted
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Run Gitleaks
#         run: |
#           docker run -v $(pwd):/path zricethezav/gitleaks:latest detect --source="/path" -v --report-format json --report-path gitleaks-report.json
#         continue-on-error: true

#       - name: Check for Gitleaks output
#         id: check-output
#         run: |
#           if [ -f gitleaks-report.json ]; then
#             echo "Gitleaks found potential secrets. See the report for details."
#             cat gitleaks-report.json | jq .
#             echo "secrets_found=true" >> $GITHUB_OUTPUT
#           else
#             echo "No secrets found by Gitleaks."
#             echo "secrets_found=false" >> $GITHUB_OUTPUT
#           fi

#       - name: Display Gitleaks report
#         if: steps.check-output.outputs.secrets_found == 'true'
#         run: |
#           echo "## Gitleaks Report" >> $GITHUB_STEP_SUMMARY
#           cat gitleaks-report.json | jq -r >> $GITHUB_STEP_SUMMARY



name: Security Scans
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  semgrep-scan:
    name: Semgrep SAST Scan
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Semgrep scan
        run: |
          docker run -v $(pwd):/src \
          -e SEMGREP_APP_TOKEN=${{ secrets.SEMGREP_APP_TOKEN }} \
          -e SEMGREP_REPO_URL=https://github.com/${{ github.repository }} \
          -e SEMGREP_REPO_NAME=${{ github.repository }} \
          -e SEMGREP_BRANCH=${{ github.ref_name }} \
          -e SEMGREP_JOB_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -e SEMGREP_COMMIT=${{ github.sha }} \
          -e SEMGREP_PR_ID=${{ github.event.pull_request.number }} \
          semgrep/semgrep semgrep ci --sarif --output=semgrep.sarif

      - name: Upload Semgrep SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep.sarif
          wait-for-processing: true

      - name: Upload Semgrep to DefectDojo
        if: success() && github.event_name == 'push'
        run: |
          curl -X POST \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
            -F "scan_date=$(date +%Y-%m-%d)" \
            -F "engagement=${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}" \
            -F "file=@semgrep.sarif" \
            -F "scan_type=Semgrep JSON Report" \
            ${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/
        continue-on-error: true

  gitleaks-scan:
    name: Gitleaks Secret Scanning
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        run: |
          docker run -v $(pwd):/path zricethezav/gitleaks:latest detect --source="/path" -v --report-format json --report-path gitleaks-report.json
        continue-on-error: true

      - name: Check for Gitleaks output
        id: check-output
        run: |
          if [ -f gitleaks-report.json ]; then
            echo "Gitleaks found potential secrets. See the report for details."
            cat gitleaks-report.json | jq .
            echo "secrets_found=true" >> $GITHUB_OUTPUT
          else
            echo "No secrets found by Gitleaks."
            echo "secrets_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Display Gitleaks report
        if: steps.check-output.outputs.secrets_found == 'true'
        run: |
          echo "## Gitleaks Report" >> $GITHUB_STEP_SUMMARY
          cat gitleaks-report.json | jq -r >> $GITHUB_STEP_SUMMARY

      - name: Upload Gitleaks to DefectDojo
        if: steps.check-output.outputs.secrets_found == 'true' && github.event_name == 'push'
        run: |
          curl -X POST \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
            -F "scan_date=$(date +%Y-%m-%d)" \
            -F "engagement=${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}" \
            -F "file=@gitleaks-report.json" \
            -F "scan_type=Gitleaks Scan" \
            ${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/
        continue-on-error: true
