name: Full OWASP ZAP DAST Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      target_url:
        description: 'Target URL for the ZAP scan'
        required: true
        default: 'http://localhost:5000'
  schedule:
    - cron: '0 2 * * *'  # nightly at 02:00

jobs:
  zap-full-scan:
    name: Full OWASP ZAP DAST Scan
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set TARGET_URL
        run: echo "TARGET_URL=${{ github.event.inputs.target_url }}" >> $GITHUB_ENV

      - name: Wait for application to be available
        run: |
          for i in $(seq 1 30); do
            if curl -s "$TARGET_URL" > /dev/null; then
              echo "✅ Application is up at $TARGET_URL"
              exit 0
            fi
            echo "⌛ Waiting for application ($i/30)..."
            sleep 10
          done
          echo "❌ Application did not respond at $TARGET_URL"
          exit 1

      - name: Run full ZAP scan
        run: |
          mkdir -p zap-results
          docker run --rm --network host \
            -v "$(pwd)/zap-results:/zap/wrk:rw" \
            zaproxy/zap-stable:latest \
            zap-full-scan.py \
              -t "$TARGET_URL" \
              -r zap-full-report.html \
              -x zap-full-report.xml \
              -I \
              -a \
            > zap-scan.log 2>&1 || true

      - name: Upload ZAP scan log
        uses: actions/upload-artifact@v3
        with:
          name: zap-scan-log
          path: zap-scan.log

      - name: Upload ZAP scan results
        uses: actions/upload-artifact@v3
        with:
          name: zap-results
          path: zap-results/

      - name: Import ZAP report into DefectDojo
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_ENGAGEMENT_ID: ${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}
        run: |
          REPORT=zap-results/zap-full-report.xml
          if [ -f "$REPORT" ]; then
            echo "Uploading ZAP XML report to DefectDojo..."
            curl -s -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
              -H "Authorization: Token $DEFECTDOJO_API_KEY" \
              -F "scan_date=$(date +%Y-%m-%d)" \
              -F "scan_type=ZAP Scan" \
              -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
              -F "file=@$REPORT"
            echo "✅ DefectDojo import complete"
          else
            echo "❌ ZAP XML report not found at $REPORT — skipping upload"
          fi
