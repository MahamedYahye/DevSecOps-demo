name: Upload Security Results
on:
  workflow_run:
    workflows: ["Build and Container Security"]
    types:
      - completed
  workflow_dispatch:

jobs:
  upload_to_defectdojo:
    name: Upload to DefectDojo
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Download Source Security Results
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Source Code Security Scans
          workflow_conclusion: success
          name: semgrep-results
          path: all-results/semgrep-results

      - name: Download Bandit Results
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Source Code Security Scans
          workflow_conclusion: success
          name: bandit-results
          path: all-results/bandit-results

      - name: Download Gitleaks Results  
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Source Code Security Scans
          workflow_conclusion: success
          name: gitleaks-results
          path: all-results/gitleaks-results
          
      - name: Download Build Results
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Build and Container Security
          workflow_conclusion: success
          name: build-results
          path: all-results/build-results

      - name: Validate Results
        id: validate
        run: |
          echo "=== Validating Scan Outputs ==="
          SEMGREP_OK=false
          BANDIT_OK=false
          GITLEAKS_OK=false
          SBOM_OK=false
          GRYPE_OK=false

          if [ -f all-results/semgrep-results/scan.sarif ]; then
            echo "Semgrep: ✅ OK"
            SEMGREP_OK=true
          else
            echo "Semgrep: ❌ Missing"
          fi

          if [ -f all-results/bandit-results/report.json ]; then
            echo "Bandit: ✅ OK"
            BANDIT_OK=true
          else
            echo "Bandit: ❌ Missing"
          fi

          if [ -f all-results/gitleaks-results/report.json ]; then
            echo "GitLeaks: ✅ OK"
            GITLEAKS_OK=true
          else
            echo "GitLeaks: ❌ Missing"
          fi
          
          if [ -f all-results/build-results/sbom.cyclonedx.json ]; then
            echo "SBOM (CycloneDX): ✅ OK"
            SBOM_OK=true
          else
            echo "SBOM (CycloneDX): ❌ Missing"
          fi
          
          if [ -f all-results/build-results/grype-vulnerabilities.json ]; then
            echo "Grype: ✅ OK"
            GRYPE_OK=true
          else
            echo "Grype: ❌ Missing"
          fi

          # Save results for later steps
          echo "semgrep_ok=$SEMGREP_OK" >> $GITHUB_OUTPUT
          echo "bandit_ok=$BANDIT_OK" >> $GITHUB_OUTPUT
          echo "gitleaks_ok=$GITLEAKS_OK" >> $GITHUB_OUTPUT
          echo "sbom_ok=$SBOM_OK" >> $GITHUB_OUTPUT
          echo "grype_ok=$GRYPE_OK" >> $GITHUB_OUTPUT

      - name: Upload to DefectDojo
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_ENGAGEMENT_ID: ${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}
        run: |
          SCAN_DATE=$(date +%Y-%m-%d)
          
          # Enhanced error handling
          upload_scan() {
            local file=$1
            local scan_type=$2
            local scan_name=$3
            
            echo "⌛ Uploading $scan_name ($scan_type)"
            
            HTTP_CODE=$(curl -s -o response.txt -w "%{http_code}" \
              -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
              -H "Authorization: Token $DEFECTDOJO_API_KEY" \
              -F "scan_date=$SCAN_DATE" \
              -F "scan_type=$scan_type" \
              -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
              -F "file=@$file")
            
            if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
              echo "✅ Successfully uploaded $scan_name"
              return 0
            else
              echo "❌ Upload failed for $scan_name with HTTP code $HTTP_CODE"
              cat response.txt
              return 1
            fi
          }

          # Process all scans
          UPLOAD_FAILURES=0
          
          if [ "${{ steps.validate.outputs.semgrep_ok }}" == "true" ]; then
            upload_scan all-results/semgrep-results/scan.sarif "SARIF" "Semgrep" || ((UPLOAD_FAILURES++))
          fi
          
          if [ "${{ steps.validate.outputs.bandit_ok }}" == "true" ]; then
            upload_scan all-results/bandit-results/report.json "Bandit Scan" "Bandit" || ((UPLOAD_FAILURES++))
          fi
          
          if [ "${{ steps.validate.outputs.gitleaks_ok }}" == "true" ]; then
            upload_scan all-results/gitleaks-results/report.json "Gitleaks Scan" "GitLeaks" || ((UPLOAD_FAILURES++))
          fi
          
          if [ "${{ steps.validate.outputs.sbom_ok }}" == "true" ]; then
            upload_scan all-results/build-results/sbom.cyclonedx.json "CycloneDX Scan" "SBOM" || ((UPLOAD_FAILURES++))
          fi
          
          if [ "${{ steps.validate.outputs.grype_ok }}" == "true" ]; then
            upload_scan all-results/build-results/grype-vulnerabilities.json "Anchore Grype" "Grype" || ((UPLOAD_FAILURES++))
          fi

          echo "=== Upload Summary ==="
          if [ "$UPLOAD_FAILURES" -eq 0 ]; then
            echo "✅ All uploads processed successfully"
          else
            echo "⚠️ $UPLOAD_FAILURES upload(s) failed"
            exit 1
          fi