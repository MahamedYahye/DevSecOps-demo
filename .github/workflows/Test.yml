name: Modular SAST Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  gitleaks:
    name: GitLeaks Deep Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code with full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Volledige geschiedenis ophalen
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install GitLeaks
      run: |
        go install github.com/zricethezav/gitleaks/v8@latest
        
    - name: Run GitLeaks Scan (volledige historie)
      run: |
        mkdir -p gitleaks-results
        # Voer handmatig GitLeaks uit op de volledige repository
        gitleaks detect --source=. --verbose --report-format=json --report-path=gitleaks-results/report.json
        
        # Toon resultaten
        if [ -f gitleaks-results/report.json ] && [ "$(cat gitleaks-results/report.json | jq 'length')" -gt 0 ]; then
          echo "=== GitLeaks heeft geheimen gevonden ==="
          cat gitleaks-results/report.json | jq '.'
          echo "Aantal gevonden geheimen: $(cat gitleaks-results/report.json | jq 'length')"
        else
          echo "=== Geen geheimen gevonden ==="
        fi
        
    - name: Upload GitLeaks Results
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-results
        path: gitleaks-results/
        if-no-files-found: warn

  semgrep:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto
        continue-on-error: true

  bandit:
    name: Bandit Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Bandit
      run: |
        python -m pip install bandit
        
    - name: Run Bandit
      # In productie: verwijder continue-on-error zodat pipeline faalt bij problemen
      continue-on-error: true
      run: |
        # Eenvoudige productie-level scan
        bandit -r . -ll -f json -o bandit-results.json || true
        
        # Toon bevindingen
        if [ -f bandit-results.json ]; then
          echo "=== Beveiligingsproblemen ==="
          jq -r '.results[] | "[\(.issue_severity)] \(.issue_text) in \(.filename) lijn \(.line_number)"' bandit-results.json
        fi
        
    - name: Upload Bandit Results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-results
        path: bandit-results.json
        if-no-files-found: warn


  sast-scans:
    name: Run All Scans
    runs-on: ubuntu-latest
    needs: [gitleaks, semgrep, bandit]
    steps:
      - name: Summary
        run: echo "All SAST scans completed successfully."
