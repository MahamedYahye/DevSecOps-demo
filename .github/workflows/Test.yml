name: Modular SAST Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  gitleaks:
    name: GitLeaks Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code with full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install latest GitLeaks version
      run: |
        wget https://github.com/zricethezav/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz
        tar -xzf gitleaks_8.18.1_linux_x64.tar.gz
        chmod +x gitleaks
        sudo mv gitleaks /usr/local/bin/
        
    - name: Run GitLeaks scan
      continue-on-error: true  # Voor ontwikkelingsfase, verwijder voor productie
      run: |
        # Scan en sla resultaten op
        gitleaks detect --source=. --verbose --redact --report-format=json --report-path=gitleaks-results.json
        
        # Toon bevindingen
        echo "=== GitLeaks Resultaten ==="
        if [ -f gitleaks-results.json ]; then
          FOUND=$(jq 'length' gitleaks-results.json)
          if [ "$FOUND" -gt 0 ]; then
            echo "⚠️ GitLeaks heeft $FOUND potentiële geheimen gevonden"
            jq -r '.[] | "- \(.Rule): \(.Description) in \(.File)"' gitleaks-results.json
          else
            echo "✅ Geen geheimen gevonden"
          fi
        fi
        
    - name: Upload GitLeaks Results
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-results
        path: gitleaks-results.json
        if-no-files-found: warn

  semgrep:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto
        continue-on-error: true

  bandit:
    name: Bandit Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Bandit
      run: |
        python -m pip install bandit
        
    - name: Run Bandit
  
      continue-on-error: true
      run: |
        # Eenvoudige productie-level scan
        bandit -r . -ll -f json -o bandit-results.json || true
        
        # Toon bevindingen
        if [ -f bandit-results.json ]; then
          echo "=== Beveiligingsproblemen ==="
          jq -r '.results[] | "[\(.issue_severity)] \(.issue_text) in \(.filename) lijn \(.line_number)"' bandit-results.json
        fi
        
    - name: Upload Bandit Results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-results
        path: bandit-results.json
        if-no-files-found: warn


  sast-scans:
    name: Run All Scans
    runs-on: ubuntu-latest
    needs: [gitleaks, semgrep, bandit]
    steps:
      - name: Summary
        run: echo "All SAST scans completed successfully."
