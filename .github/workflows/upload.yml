name: Upload Semgrep to DefectDojo
on:
  workflow_run:
    workflows: ["Modular SAST Workflow"]
    types:
      - completed

jobs:
  upload_semgrep:
    name: Upload Semgrep to DefectDojo
    runs-on: ubuntu-latest
    steps:
      # Download alleen het semgrep artifact
      - name: Download Semgrep artifact
        uses: actions/download-artifact@v4
        with:
          name: semgrep-results
          path: semgrep
        continue-on-error: true

      # Debug de inhoud van het gedownloade artifact
      - name: List Semgrep artifacts
        run: |
          echo "=== Semgrep Artifact Content ==="
          ls -la semgrep || echo "No semgrep directory found"
          find semgrep -type f | sort || echo "No files found in semgrep directory"

      # Valideer het Semgrep resultaat
      - name: Validate Semgrep Result
        id: validate
        run: |
          SEMGREP_FILE=""
          
          if [ -f semgrep/results.json ]; then
            echo "✅ Found Semgrep results.json file"
            SEMGREP_FILE="semgrep/results.json"
          elif [ -f semgrep/semgrep-results.json ]; then
            echo "✅ Found Semgrep semgrep-results.json file"
            SEMGREP_FILE="semgrep/semgrep-results.json"
          else
            # Zoek dieper in de map structuur
            FOUND_FILE=$(find semgrep -name "*.json" | head -1)
            if [ -n "$FOUND_FILE" ]; then
              echo "✅ Found Semgrep results at: $FOUND_FILE"
              SEMGREP_FILE="$FOUND_FILE"
            else
              echo "❌ No Semgrep results found"
            fi
          fi
          
          if [ -n "$SEMGREP_FILE" ]; then
            echo "semgrep_file=$SEMGREP_FILE" >> $GITHUB_OUTPUT
            echo "semgrep_found=true" >> $GITHUB_OUTPUT
          else
            echo "semgrep_found=false" >> $GITHUB_OUTPUT
          fi

      # Upload naar DefectDojo
      - name: Upload Semgrep to DefectDojo
        if: steps.validate.outputs.semgrep_found == 'true'
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_ENGAGEMENT_ID: ${{ secrets.DEFECTDOJO_ENGAGEMENT_ID }}
        run: |
          SCAN_DATE=$(date +%Y-%m-%d)
          SEMGREP_FILE="${{ steps.validate.outputs.semgrep_file }}"
          
          echo "⌛ Uploading Semgrep scan from $SEMGREP_FILE"
          
          # Toon bestandsgrootte en eerste 10 regels om te helpen met debuggen
          echo "File size: $(wc -c < $SEMGREP_FILE) bytes"
          echo "First 10 lines of the file:"
          head -n 10 $SEMGREP_FILE
          
          HTTP_CODE=$(curl -s -o response.txt -w "%{http_code}" \
            -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
            -H "Authorization: Token $DEFECTDOJO_API_KEY" \
            -F "scan_date=$SCAN_DATE" \
            -F "scan_type=Semgrep JSON Report" \
            -F "close_old_findings=true" \
            -F "deduplication_on_engagement=true" \
            -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
            -F "file=@$SEMGREP_FILE")
          
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "✅ Successfully uploaded Semgrep scan"
            echo "Response:"
            cat response.txt
          else
            echo "❌ Upload failed with HTTP code $HTTP_CODE"
            echo "Error response:"
            cat response.txt
            exit 1
          fi