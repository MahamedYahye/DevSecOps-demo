name: Security Scans
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Handmatige trigger voor testing

permissions:
  contents: read
  security-events: write

jobs:
  semgrep-scan:
    name: Semgrep SAST
    runs-on: ubuntu-latest  # GitHub-hosted runner in plaats van self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Semgrep Scan
        uses: semgrep/semgrep-action@v1
        continue-on-error: true  # Zorgt dat de pipeline doorgaat ondanks bevindingen
        with:
          config: auto
          output: semgrep-results.json,semgrep.sarif
          publish-token: ${{ secrets.SEMGREP_APP_TOKEN }}
          
      - name: Upload to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          
      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: |
            semgrep-results.json
            semgrep.sarif

  gitleaks-scan:
    name: Gitleaks Secret Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
        
      - name: Format Gitleaks Output
        if: always()  # Altijd uitvoeren, zelfs als gitleaks scan faalt
        run: |
          test -f leak_report.json && cp leak_report.json gitleaks-report.json || echo '[]' > gitleaks-report.json
          
      - name: Upload Gitleaks results
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-results
          path: gitleaks-report.json